---
groups:
- name: misthos-js
  jobs:
  - install-deps
  - test
  - bump-minor
  - bump-patch
  - rc
  - release

jobs:
- name: bump-minor
  plan:
  - { put: release-version, params: {bump: minor}}

- name: bump-patch
  plan:
  - { get: repo,   trigger: true,  passed: [release] }
  - { get: release-version, trigger: true, params: {bump: patch}, passed: [release] }
  - { put: release-version,                params: {file: release-version/number} }

- name: rc
  plan:
  - aggregate:
    - { get: repo,   trigger: true,  passed: [test] }
    - { get: release-version, trigger: false, params: {pre: rc} }
  - { put: release-version, params: {file: release-version/number} }

- name: install-deps
  plan:
  - aggregate:
    - {get: deps, trigger: true}
    - {get: pipeline-tasks}
    - {put: deps-version, params: {bump: minor}}
  - task: install-deps
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: misthosio/misthos-web-pipeline}
      inputs:
      - name: pipeline-tasks
      - name: deps
      - name: deps-version
      outputs:
      - name: bundled-deps
      run:
        path: pipeline-tasks/ci/tasks/install-deps.sh
  - put: bundled-deps
    params:
      file: bundled-deps/bundled-misthos-js-deps-*.tgz

- name: test
  plan:
  - aggregate:
    - {get: repo, trigger: true}
    - {get: bundled-deps, trigger: true}
    - {get: pipeline-tasks}
  - task: test
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: misthosio/misthos-web-pipeline}
      inputs:
      - name: pipeline-tasks
      - name: bundled-deps
      - name: repo
      run:
        path: pipeline-tasks/ci/tasks/run-tests.sh

- name: release
  serial: true
  plan:
  - aggregate:
    - {get: release-version, passed: [rc], params: {bump: final}}
    - {get: repo, passed: [rc]}
    - {get: pipeline-tasks}
  - task: release
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: misthosio/misthos-web-pipeline}
      inputs:
      - name: pipeline-tasks
      - name: repo
      - name: release-version
      outputs:
      - name: release
      - name: repo-out
      params:
        VERSION_FROM: release-version/number
        NPM_TOKEN: ((npm-token))
        REPO_ROOT: repo
        REPO_OUT: repo-out
        BRANCH: master
        RELEASE_ROOT: release
        RELEASE_NAME: misthos-js
      run:
        path: pipeline-tasks/ci/tasks/release.sh
  - aggregate:
    - put: github-release
      params:
        name:   release/name
        tag:    release/tag
        body:   release/notes.md
    - { put: release-version, params: {bump: final}}
    - { put: repo, params: {rebase: true, repository: repo-out/git }}

resources:
- name: repo
  type: git
  source:
    ignore_paths: [infra/*, ci/*, Makefile]
    uri: git@github.com:misthosio/misthos-js.git
    branch: master
    private_key: ((github-ssh-key.private_key))
- name: deps
  type: git
  source:
    paths: [yarn.lock]
    uri: git@github.com:misthosio/misthos-js.git
    branch: master
    private_key: ((github-ssh-key.private_key))
- name: bundled-deps
  type: gcs-resource
  source:
    bucket: artifact-cache
    json_key: ((gcp-service-account))
    regexp: bundled-misthos-js-deps-v(.*)-.*.tgz
- name: github-release
  type: github-release
  source:
    user: misthos-bot
    repository:   delmoÂ¬
    access_token: ((github-access-token))
- name: deps-version
  type: semver
  source:
    initial_version: 0.2.0
    driver: gcs
    bucket: artifact-cache
    key: versions/misthos-js-deps-version
    json_key: ((gcp-service-account))
- name: release-version
  type: semver
  source:
    initial_version: 0.2.0
    driver: gcs
    bucket: artifact-cache
    key: versions/misthos-js-version
    json_key: ((gcp-service-account))
- name: pipeline-tasks
  type: git
  source:
    uri: git@github.com:misthosio/misthos-js.git
    branch: master
    paths: [ci/tasks/*, Makefile]
    private_key: ((github-ssh-key.private_key))

resource_types:
  - name: gcs-resource
    type: docker-image
    source:
      repository: frodenas/gcs-resource
